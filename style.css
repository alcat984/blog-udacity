body {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: 10vw 30vw 10vw;
    grid-gap: 1em;
    font-family: Georgia, 'Times New Roman', Times, serif;

  }
  
  header,
  footer {
    grid-column: 1 / span 5;
  }
  
  main {
    grid-column: 1 / span 3;
  }
  
  aside {
    grid-column: span 2;
  }
  
  @media (max-width: 700px) {
    
    main,
    aside {
      grid-column: 1 / span 5;
    }
    
  }
  
  /* Demo Specific Styles */
  body {
    margin: 0 auto;
    max-width: 56em;
    padding: 1em 0;
  }
  
  header,
  main,
  aside,
  footer {
    background: #eaeaea;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  header,
  footer {
    height: 10vw;
    background: #1a567e;
    
  }

  /* Flex Items*/
  .flex-container {
    /* We first create a flex layout context */
    display: flex;
    
    /* Then we define the flow direction 
       and if we allow the items to wrap 
     * Remember this is the same as:
     * flex-direction: row;
     * flex-wrap: wrap;
     */
    flex-flow: row wrap;
    
    /* Then we define how is distributed the remaining space */
    justify-content: space-around;
    
    padding: 0;
    margin: 0;
    list-style: none;
  }
  
  .flex-item {
    background: tomato;
    padding: 5px;
    width: 50px;
    height: 80px;
    margin-top: 10px;
    line-height: 150px;
    color: white;
    font-weight: bold;
    font-size: 3em;
    text-align: center;
  }